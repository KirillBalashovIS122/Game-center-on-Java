services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: gamecenter
      POSTGRES_USER: sysdba
      POSTGRES_PASSWORD: masterkey
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sysdba -d gamecenter"]
      interval: 2s
      timeout: 5s
      retries: 10
    profiles:
      - postgres

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: gamecenter
      MYSQL_USER: sysdba
      MYSQL_PASSWORD: masterkey
      MYSQL_ROOT_PASSWORD: masterkey
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "sysdba", "-pmasterkey"]
      interval: 2s
      timeout: 5s
      retries: 10
    profiles:
      - mysql

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-postgres}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
        required: false
      mysql:
        condition: service_healthy
        required: false
    networks:
      - app-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network

volumes:
  postgres_data:
  mysql_data:

networks:
  app-network:
    driver: bridge